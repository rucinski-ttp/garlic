name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show runner info
        run: |
          uname -a
          python3 --version || true
          cmake --version || true
          ninja --version || true

      - name: Install Zephyr Python deps (venv)
        shell: bash
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r "$GITHUB_WORKSPACE/zephyr/scripts/requirements.txt"

      - name: Check formatting (clang-format)
        shell: bash
        run: |
          source scripts/source.sh
          ./scripts/format.sh check

      - name: Build Zephyr app (nRF52DK)
        shell: bash
        run: |
          source scripts/source.sh
          export GARLIC_BUILD_DIR=build-ci-${{ github.run_id }}
          ./scripts/build.sh clean

      - name: Clang-Tidy (unit compile DB)
        shell: bash
        run: |
          if command -v clang-tidy >/dev/null 2>&1; then
            ./scripts/format.sh tidy
          else
            echo "clang-tidy not found on runner; skipping."
          fi

      - name: Run unit tests
        shell: bash
        run: |
          cmake -S tests/unit -B tests/unit/build -DCMAKE_BUILD_TYPE=Release
          cmake --build tests/unit/build -j
          ctest --test-dir tests/unit/build --output-on-failure

      # Removed RTT capture help step to streamline CI

      - name: Archive firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-artifacts
          path: |
            app/${{ env.GARLIC_BUILD_DIR || 'build-ci-${{ github.run_id }}' }}/zephyr/zephyr.elf
            app/${{ env.GARLIC_BUILD_DIR || 'build-ci-${{ github.run_id }}' }}/zephyr/zephyr.hex
            app/${{ env.GARLIC_BUILD_DIR || 'build-ci-${{ github.run_id }}' }}/zephyr/zephyr.bin
