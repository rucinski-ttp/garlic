# Clang-Format Configuration for Garlic Embedded Project
# Based on common embedded C/C++ standards with Zephyr influences

# Base style - we'll customize from Linux kernel style which is common for embedded
BasedOnStyle: LLVM

# Language
Language: Cpp
Standard: c++11

# Indentation
IndentWidth: 4
TabWidth: 4
UseTab: Never
IndentCaseLabels: true
IndentCaseBlocks: false
IndentGotoLabels: false
IndentPPDirectives: None
IndentWrappedFunctionNames: false

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: true
AlignEscapedNewlines: Right
AlignOperands: true
AlignTrailingComments: true

# Line Breaking
ColumnLimit: 100
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: false
BinPackArguments: true
BinPackParameters: true
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Linux
BreakBeforeTernaryOperators: false
BreakStringLiterals: true

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Pointer and Reference Alignment (right side for embedded C convention)
PointerAlignment: Right
DerivePointerAlignment: false

# Comments
ReflowComments: true
CommentPragmas: '^ (NOLINT|TODO|FIXME|NOTE|WARNING):'

# Macros and Includes
SortIncludes: true
IncludeBlocks: Preserve
IncludeCategories:
  # Zephyr headers
  - Regex: '^<zephyr/.*>'
    Priority: 2
  # Standard C headers
  - Regex: '^<(assert|ctype|errno|float|limits|locale|math|setjmp|signal|stdarg|stddef|stdio|stdlib|string|time|stdint|stdbool|inttypes)\.h>'
    Priority: 3
  # System headers
  - Regex: '^<.*>'
    Priority: 4
  # Local headers
  - Regex: '^".*"'
    Priority: 5

# Other
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60

# Specific settings for embedded code patterns
# Allow single line statement blocks for simple GPIO operations
AllowShortEnumsOnASingleLine: false

# Don't sort using declarations (can break HAL code)
SortUsingDeclarations: false

# Keep existing namespace formatting
CompactNamespaces: false
FixNamespaceComments: true

# Brace wrapping details
BraceWrapping:
  AfterClass: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: true
  AfterNamespace: false
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: false
  BeforeElse: false
  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true