# Enable serial
CONFIG_SERIAL=y
CONFIG_CONSOLE=y
CONFIG_UART_CONSOLE=n
CONFIG_UART_ASYNC_API=y

# Enable GPIO for LED control
CONFIG_GPIO=y

# Use async DMA, not IRQ/polling
CONFIG_UART_INTERRUPT_DRIVEN=n

# Enable both UART and RTT for debugging
CONFIG_USE_SEGGER_RTT=y
CONFIG_RTT_CONSOLE=y

# Thread and kernel features
CONFIG_MAIN_STACK_SIZE=2048
CONFIG_HEAP_MEM_POOL_SIZE=2048

# Enable logging (but keep it minimal for production)
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
CONFIG_LOG_BACKEND_UART=n
CONFIG_LOG_BACKEND_RTT=y
CONFIG_UART_USE_RUNTIME_CONFIGURE=y

# Ensure RTT logs appear reliably during early boot/reset
CONFIG_PRINTK=y
CONFIG_LOG_MODE_IMMEDIATE=y
# Increase RTT buffer to avoid early overflow (non-blocking)
CONFIG_SEGGER_RTT_BUFFER_SIZE_UP=1024
CONFIG_LOG_BACKEND_RTT_OUTPUT_BUFFER_SIZE=1024
CONFIG_LOG_BACKEND_RTT_MODE_BLOCK=y

# Make printk over RTT block briefly until host attaches (prevents dropping boot lines)
# ~2s total retry window for early printk
CONFIG_RTT_TX_RETRY_CNT=2000
CONFIG_RTT_TX_RETRY_DELAY_MS=1
#CONFIG_RTT_TX_RETRY_IN_INTERRUPT=y  # optional; keep off to avoid ISR stalls

# Treat warnings as errors for medical-grade quality
CONFIG_COMPILER_WARNINGS_AS_ERRORS=y
