# Enable serial
CONFIG_SERIAL=y
CONFIG_CONSOLE=y
CONFIG_UART_CONSOLE=n
CONFIG_UART_ASYNC_API=y

# Enable I2C with callback (async) support
CONFIG_I2C=y
CONFIG_I2C_CALLBACK=y

# Enable GPIO for LED control
CONFIG_GPIO=y

# Use async DMA, not IRQ/polling
CONFIG_UART_INTERRUPT_DRIVEN=n

# Enable both UART and RTT for debugging
CONFIG_USE_SEGGER_RTT=n
CONFIG_RTT_CONSOLE=n

# Thread and kernel features
CONFIG_MAIN_STACK_SIZE=2048
CONFIG_HEAP_MEM_POOL_SIZE=8192

# Enable logging (but keep it minimal for production)
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
CONFIG_LOG_BACKEND_UART=n
CONFIG_LOG_BACKEND_RTT=n
CONFIG_UART_USE_RUNTIME_CONFIGURE=y

# Ensure RTT logs appear reliably during early boot/reset
CONFIG_PRINTK=y
CONFIG_LOG_MODE_IMMEDIATE=n
# Increase RTT buffer to avoid early overflow (non-blocking)
CONFIG_SEGGER_RTT_BUFFER_SIZE_UP=1024
CONFIG_LOG_BACKEND_RTT_OUTPUT_BUFFER_SIZE=1024
# Avoid blocking the app if RTT host is not attached yet
CONFIG_LOG_BACKEND_RTT_MODE_BLOCK=n

# Make printk over RTT block briefly until host attaches (prevents dropping boot lines)
# ~2s total retry window for early printk
CONFIG_RTT_TX_RETRY_CNT=2000
CONFIG_RTT_TX_RETRY_DELAY_MS=1
#CONFIG_RTT_TX_RETRY_IN_INTERRUPT=y  # optional; keep off to avoid ISR stalls

# Treat warnings as errors for medical-grade quality
CONFIG_COMPILER_WARNINGS_AS_ERRORS=y
CONFIG_REBOOT=y
CONFIG_FLASH=y

# Bluetooth (NUS) peripheral to expose command transport over BLE
CONFIG_BT=y
CONFIG_BT_PERIPHERAL=y
CONFIG_BT_GAP_AUTO_UPDATE_CONN_PARAMS=n
CONFIG_BT_AUTO_PHY_UPDATE=n
CONFIG_BT_AUTO_DATA_LEN_UPDATE=n
CONFIG_BT_DEVICE_NAME="GarlicDK"
CONFIG_BT_MAX_CONN=1
CONFIG_BT_MAX_PAIRED=1
CONFIG_BT_GATT_SERVICE_CHANGED=y
CONFIG_BT_ZEPHYR_NUS=y
CONFIG_BT_ZEPHYR_NUS_DEFAULT_INSTANCE=y
CONFIG_BT_DIS=y
CONFIG_BT_GATT_CACHING=n

# Increase BT buffers slightly for stability during discovery
CONFIG_BT_BUF_ACL_RX_COUNT=10
CONFIG_BT_BUF_ACL_TX_COUNT=10
